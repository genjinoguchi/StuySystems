File Redirection
     Changing the usual input/output behavior of a program.

     Command line redirection
     	     >
		redirects stdout to a file.
		Overwrites the contents of the file.

		Example:
		ls > file_list

	     >>
		redirects stdout to a file.
		Appends the content to a file.
		Cool trick: cat > somefile
		     You get the world's shortest text editor.

	     2> redirects sterr to a file.
	     	Example: cat boo 2> errorfile

	     &> redirects errythang to a file.

	     <
		Redirects stdin from a file.

	     | (pipe)
	       Redirect stdout from one ciommand to stdin of the next.

	       ls | wc



      Redirection in C programs

      	  dup - <unistd.h>
	      Duplicates an existing entry in teh file table.
	      Returns a new file descriptor for het duplicate entry.

	      dup(fd)
		returns the new file descriptor.

          dup2 - <unistd.h>
	       Redirect one file descriptor to another.

	       dup2 (fd1, fd2)
	       	    fd = open("foo", O_WRONLY | O_TRUNC);
	       	    dup2( fd, STDOUT_FILENO);
		    This makes all of the outputs go to the file "foo"

		    you're going to lsoe everything in the fd2 file.


	Using dup and dup2
	      int fd1, fd2
	      fd1 = dup(STDOUT_FILENO) ..sets fd1's file table entry to stdout

	      dup2( fd2, STDOUT_FILENO) ..sets the STDOUT Fileno's entry to fd2

	      dup2( fd1, STDOUT_FILENO) sets the STDOUT_FILENO's entry to fd1, which is stdout.
